{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAOC,SAASC,cAAc,SAuBpC,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACaC,KAAKC,SAAW,GAErCJ,EAAS,CAAEH,WAAUC,UAErBG,EAAQ,CAAEJ,WAAUC,S,GAGpBA,E,IA/BPL,EAAKY,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAIC,iBAI4C,IAFhD,IAAIC,EAAQC,OAAOhB,EAAKK,MAAMY,OAErBC,EAAI,EAAGA,GAAKF,OAAOhB,EAAKmB,OAAOF,OAAQC,GAAK,EACnDf,EAAce,EAAGH,GACDK,MAAV,SAAAC,G,IAAGjB,EAAQiB,EAARjB,SAAUC,EAAKgB,EAALhB,MACjBiB,EAAAxB,GAASyB,OAAOC,QAAQ,uBAAwCC,OAAfrB,EAAS,QAAYqB,OAANpB,EAAM,OACpEqB,QAAMC,IAAI,uBAAwCF,OAAfrB,EAAS,QAAYqB,OAANpB,EAAM,M,IAE3DuB,OAAM,SAAAP,G,IAAGjB,EAAQiB,EAARjB,SAAUC,EAAKgB,EAALhB,MAClBiB,EAAAxB,GAASyB,OAAOM,QAAQ,sBAAuCJ,OAAfrB,EAAS,QAAYqB,OAANpB,EAAM,M,IAEvEU,GAASC,OAAOhB,EAAK8B,KAAKb,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', onSubmitForm);\n\nfunction onSubmitForm(evt) {\n  evt.preventDefault();\n\n  let delay = Number(form.delay.value); // отримуємо ЧИСЛОВЕ значення делай введене користувачем\n \n  for (let i = 1; i <= Number(form.amount.value); i += 1) {    //робимо ітерацію по створеним промісам введених в рядок емаунт(визначаємо кількість введених емаунтів)\n    createPromise(i, delay)  //позиція, затримка\n    .then(({ position, delay }) => {   //успішне виконання промісу \n      Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {   // виконую і повертаю помилку промісу\n      Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n    delay += Number(form.step.value);  // кожна ітерація циклу значення delay збільшується+= на значення кроку яке юхер увів в поле степ\n  }\n}\n\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n       resolve ({ position, delay })// Fulfill\n     } else {\n       reject ({ position, delay })// Reject\n     } \n    \n    }, delay)\n  });\n  };\n\n\n\n\n\n\n\n\n\n\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","addEventListener","evt","preventDefault","delay1","Number","value","i","amount","then","param","$parcel$interopDefault","Notify","success","concat","console","log","catch","failure","step"],"version":3,"file":"03-promises.4fa21fdb.js.map"}